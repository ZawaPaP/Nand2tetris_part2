class SnakeGame {
    field Snake snake;
    field SetFood food;
    field int direction;

    constructor SnakeGame new() {
        let snake = Snake.new(100, 100, 10);
        let food = SetFood.new(200, 200);
        do food.placeFood();
        let direction = 0;
        return this;
    }

    // Dispose method
    method void dispose(){
        do snake.dispose();
        do Memory.deAlloc(this);
        return;
    }

    method void moveSquare() {
        if (direction = 1) { do snake.moveUp(); }
        if (direction = 2) { do snake.moveRight(); }
        if (direction = 3) { do snake.moveDown(); }
        if (direction = 4) { do snake.moveLeft(); }
    do Sys.wait(20);
    return;
    }

    /** Runs the game: handles the user's inputs and moves the snake accordingly */
    method void run() {
        var char key;
        var boolean exit;
        var boolean over;
        let exit = false;
        let over = false;

        // while exit = false
        while (~over & ~exit) {
            let over = snake.over();
            // while key is not pressed, then follow the precious key pressed
            while (key = 0) {
                let key = Keyboard.keyPressed();
                do moveSquare();
            }
            if (key = 32) { let exit = true; } // space
            if (key = 131) { let direction = 1; }
            if (key = 132) { let direction = 2; }
            if (key = 133) { let direction = 3; }
            if (key = 130) { let direction = 4; }

            while (~(key = 0)) {
                let key = Keyboard.keyPressed();
                do moveSquare();
            }

        if( food.checkFood(snake.posX(), snake.posY()) ) {
            do food.placeFood();
        }

        }
        return;
    }



}
